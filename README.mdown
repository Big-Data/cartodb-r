## This package provides an R wrapper to the cartodb.com APIs.

For more information on the these APIs see http://developers.cartodb.com/

## Why use CartoDB with R?

- All the power of PostgreSQL/PostGIS without the need to install all the libraries locally

- No, seriously, power! Make queries on huge datasets only grabbing the bits and pieces formatted just as you need them

- Database simplicity, turn CartoDB tables directly into data.frames without any hassle

- Portability! Now share your code with collaborators without having to transfer databases etc

### Contact

Andrew Hill

- Email: andrew@vizzuality.com
 
### Requirements

The CartoDB R package requires the following external packages

- RCurl
   
- RJSONIO
      
### Suggested

Using rgeos can greatly improve mapping capability in R. It also plays nice with CartoDB, as queries accept geomAs='WKT', which can be directly used in rgeos.

- rgeos

### Installation
       
To install this package from the source code available here

- download the file
    
- change directory to the location downloaded
            
`> install.packages("cartodb_0.1.tar.gz", repos=NULL, type="source")`

- alternatively using devtools (untested, please let me know!)

`> install_github("cartodb-r", "Vizzuality")`

### Methods

**Connecting**

`cartodb("your-account-name", api.key="optional-key-for-writes")`

**Testing a connection**

`cartodb.test()`

**Getting table data**

`cartodb.collection("table_name")`

**Getting select columns**

`cartodb.collection("table_name", columns=c("column1","column2"))`

**Other parameters for cartodb.collection**

*geomAs*

- String type of geometry to return with records, doesn't work with **sql**

- default = **NULL**, same as "**WKB**" and "**the_geom**"

- "**XY**", returns the_geom_x and the_geom_y

- "**GeoJSON**", return the_geom as GeoJSON text

- "**WKT**", returns the_geom as Well-known text (for rgeos)

*omitNull*

- Boolean if TRUE omits all records with NULL the_geom, doesn't work with **sql**

- default = FALSE

*limit*

- Integer limit to number of records returned, doesn't work with **sql**

- default = NULL

*asJson*

- Boolean whether to convert your data from a JSON string to data.frame

- default = TRUE

*sql*

- String of SQL to query records directly

- default = NULL

- Overrides all other parameters except **asJson**

- example: `cartodb.collection(sql = "SELECT column1 FROM your_table")`

### Examples for CartoDB in R

Set up your first read-only CartoDB connection

```R
# Import required packages
library(RCurl)
library(RJSONIO)
library(CartoDB)

# Setup your connection
cartodb_account_name = "examples"
cartodb(cartodb_account_name)

# You can quickly test that your connection works
cartodb.test()
# #     success
# #  1    TRUE
```

Create a new data.frame out of one of your tables

```R
# Setup your connection
cartodb_account_name = "examples"
cartodb(cartodb_account_name)

# Download the first 10 records of a table with the_geom transformed to X,Y coordinates
table_name <- "monarch"
data <- cartodb.collection(table_name, geomAs="XY", limit=10)
```

A very simple map of butterflies in Mexico

```R
library(RCurl)
library(RJSONIO)
library(CartoDB)
library(maps)

# Setup your connection
cartodb_account_name = "examples"
cartodb(cartodb_account_name)

# Grab your data
data <- cartodb.collection("monarch", geomAs="XY", omitNull=TRUE)

# Create a very basic map
map(regions="mexico", lwd=0.05, lty=1)
points(data$the_geom_x, data$the_geom_y, col="red")
title("Monarch butterfly records in GBIF -- Mexico Region")
```

### TODOs

- Enable write methods

- Better type casting from JSON to R (all string :( now)

- Finish tile example (require PNG support)